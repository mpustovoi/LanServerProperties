plugins {
	id 'eclipse'
	id 'idea'
	id 'maven-publish'
	id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

// Load the common property
Properties props = new Properties();
props.load(new FileInputStream("$project.rootDir/../fabric/gradle.properties"));
props.each {prop -> project.ext.set(prop.key, prop.value)};

project.ext.mod_id = project.archives_base_name;
project.ext.minecraft_version_range = '[' + project.minecraft_version_min + ', ' + project.minecraft_version_max + ')';

// Mojang ships Java 17 to end users in 1.18+
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

// These are defined in ../fabric/gradle.properties
version = project.mod_version
group = project.dev_group // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = project.archives_base_name

dependencies {
	// Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
	// that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
	// The userdev artifact is a special name and will get all sorts of transformations applied to it.
	minecraft 'net.minecraftforge:forge:'+ project.minecraft_version + '-' + project.forge_version
}

minecraft {
	// the mappings can be changed at any time, and must be in the following format.
	// snapshot_YYYYMMDD   snapshot are built nightly.
	// stable_#			stables are built at the discretion of the MCP team.
	// Use non-default mappings at your own risk. they may not always work.
	// simply re-run your setup task after changing the mappings to update your workspace.
	mappings channel: 'official', version: project.minecraft_version // defined in ../fabric/gradle.properties
	// makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

	// This property allows configuring Gradle's ProcessResources task(s) to run on IDE output locations before launching the game.
	// It is REQUIRED to be set to true for this template to function.
	// See https://docs.gradle.org/current/dsl/org.gradle.language.jvm.tasks.ProcessResources.html
	copyIdeResources = true

	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

	// Default run configurations.
	// These can be tweaked, removed, or duplicated as needed.
	runs {
		configureEach {
			workingDirectory project.file('run')

			// Recommended logging data for a userdev environment
			property 'forge.logging.markers', 'SCAN,REGISTRIES'

			// Recommended logging level for the console
			property 'forge.logging.console.level', 'debug'

			mods {
				"${mod_id}" {
					source sourceSets.main
				}
			}
		}

		client {
			// Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
			property 'forge.enabledGameTestNamespaces', mod_id
		}
	}
}

sourceSets {
	main {
		java {
			srcDir "../src/main/java"
		}
		resources {
			srcDir "../src/main/resources"
			srcDir 'src/generated/resources'
		}
	}
}

tasks.named('jar', Jar).configure {
	version version

	manifest {
		attributes([
				"Specification-Title": mod_id,
				"Specification-Vendor": "CISM",
				"Specification-Version": "1", // We are version 1 of ourselves
				"Implementation-Title": project.name,
				"Implementation-Version": project.jar.archiveVersion,
				"Implementation-Vendor" :"CISM",
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
		])
	}

	// This is the preferred method to reobfuscate your jar file
	finalizedBy 'reobfJar'
}
jar.archiveClassifier = 'forge';

// This block of code expands all declared replace properties in the specified resource targets.
// A missing property will result in an error. Properties are expanded using ${} Groovy notation.
// When "copyIdeResources" is enabled, this will also run before the game launches in IDE environments.
// See https://docs.gradle.org/current/dsl/org.gradle.language.jvm.tasks.ProcessResources.html
tasks.named('processResources', ProcessResources).configure {
	var replaceProperties = [
			minecraft_version_range: minecraft_version_range,
			forge_version_range: forge_version_range,
			loader_version_range: loader_version_range,
			mod_id: mod_id,
			mod_version: mod_version,
	]
	inputs.properties replaceProperties

	filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
		expand replaceProperties + [project: project]
	}
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
